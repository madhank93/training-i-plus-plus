definitions:
  models.Patient:
    properties:
      address:
        type: string
      age:
        type: integer
      doctorAssignedId:
        type: string
      emailId:
        type: string
      id:
        type: string
      isDischarged:
        type: boolean
      name:
        type: string
      password:
        type: string
      roomAllocated:
        type: string
    required:
    - address
    - age
    - doctorAssignedId
    - emailId
    - name
    - password
    - roomAllocated
    type: object
  models.User:
    properties:
      address:
        type: string
      age:
        type: integer
      emailId:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - address
    - age
    - emailId
    - name
    - password
    type: object
host: localhost:8084
info:
  contact:
    email: aadityakhetan123@gmail.com
    name: Aaditya Khetan
  description: This microservice is for patient module in the sanitaria application.
  license:
    name: Apache 2.0
  title: Sanitaria - Patient Module
  version: "1.0"
paths:
  /patient/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a patient.
      parameters:
      - description: Patient id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: number
        "500":
          description: Internal Server Error
          schema:
            type: number
      security:
      - Bearer Token: []
      summary: Delete patient by ID.
      tags:
      - Patient
    get:
      consumes:
      - application/json
      description: View all the details of a patient.
      parameters:
      - description: Patient id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Patient'
        "500":
          description: Internal Server Error
          schema:
            type: number
      security:
      - Bearer Token: []
      summary: Get patient by ID.
      tags:
      - Patient
    put:
      consumes:
      - application/json
      description: Edit details of a patient.
      parameters:
      - description: Patient id
        in: path
        name: id
        required: true
        type: string
      - description: Patient details
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.Patient'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Patient'
        "400":
          description: Bad Request
          schema:
            type: number
        "500":
          description: Internal Server Error
          schema:
            type: number
      security:
      - Bearer Token: []
      summary: Edit patient by ID.
      tags:
      - Patient
  /patientLogin:
    post:
      consumes:
      - application/json
      description: This request will login a patient.
      parameters:
      - description: User emailid and password
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: number
        "404":
          description: Not Found
          schema:
            type: number
        "500":
          description: Internal Server Error
          schema:
            type: number
      summary: User login for a patient profile.
      tags:
      - Patient
  /patientRegistration:
    post:
      consumes:
      - application/json
      description: This request will create a new patient profile for a user.
      parameters:
      - description: Patient details
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.Patient'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Patient'
        "400":
          description: Bad Request
          schema:
            type: number
        "500":
          description: Internal Server Error
          schema:
            type: number
      summary: To register a new patient in the sanitaria application
      tags:
      - Patient
  /patients:
    get:
      consumes:
      - application/json
      description: Get details of all patients.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Patient'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: number
      security:
      - Bearer Token: []
      summary: Get all patients list.
      tags:
      - Patient
securityDefinitions:
  Bearer Token:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
