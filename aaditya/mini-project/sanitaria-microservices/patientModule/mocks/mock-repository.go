// Code generated by MockGen. DO NOT EDIT.
// Source: sanitaria-microservices/patientModule/repository (interfaces: MongoOperations)

// Package mocks is a generated GoMock package.
package mocks

import (
        context "context"
        reflect "reflect"
        models "sanitaria-microservices/patientModule/models"

        gomock "github.com/golang/mock/gomock"
)

// MockMongoOperations is a mock of MongoOperations interface.
type MockMongoOperations struct {
        ctrl     *gomock.Controller
        recorder *MockMongoOperationsMockRecorder
}

// MockMongoOperationsMockRecorder is the mock recorder for MockMongoOperations.
type MockMongoOperationsMockRecorder struct {
        mock *MockMongoOperations
}

// NewMockMongoOperations creates a new mock instance.
func NewMockMongoOperations(ctrl *gomock.Controller) *MockMongoOperations {
        mock := &MockMongoOperations{ctrl: ctrl}
        mock.recorder = &MockMongoOperationsMockRecorder{mock}
        return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMongoOperations) EXPECT() *MockMongoOperationsMockRecorder {
        return m.recorder
}

// InsertPatient mocks base method.
func (m *MockMongoOperations) InsertPatient(arg0 context.Context, arg1 models.Patient) {
        m.ctrl.T.Helper()
        m.ctrl.Call(m, "InsertPatient", arg0, arg1)
}

// InsertPatient indicates an expected call of InsertPatient.
func (mr *MockMongoOperationsMockRecorder) InsertPatient(arg0, arg1 interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertPatient", reflect.TypeOf((*MockMongoOperations)(nil).InsertPatient), arg0, arg1)
}