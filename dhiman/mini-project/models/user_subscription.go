// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UserSubscription user subscription
//
// swagger:model user_subscription
type UserSubscription struct {

	// medicine
	// Required: true
	// Min Length: 1
	Medicine *string `json:"medicine"`

	// next dose
	NextDose string `json:"next_dose,omitempty"`

	// rate
	// Required: true
	Rate *string `json:"rate"`
}

// Validate validates this user subscription
func (m *UserSubscription) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMedicine(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UserSubscription) validateMedicine(formats strfmt.Registry) error {

	if err := validate.Required("medicine", "body", m.Medicine); err != nil {
		return err
	}

	if err := validate.MinLength("medicine", "body", *m.Medicine, 1); err != nil {
		return err
	}

	return nil
}

func (m *UserSubscription) validateRate(formats strfmt.Registry) error {

	if err := validate.Required("rate", "body", m.Rate); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this user subscription based on context it is used
func (m *UserSubscription) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UserSubscription) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UserSubscription) UnmarshalBinary(b []byte) error {
	var res UserSubscription
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
