definitions:
  models.ContactInfo:
    properties:
      email:
        type: string
      phone:
        type: string
    required:
    - email
    - phone
    type: object
  models.User:
    properties:
      contact:
        $ref: '#/definitions/models.ContactInfo'
      dateOfBirth:
        type: string
      id:
        type: string
      idProof:
        type: string
      name:
        type: string
      password:
        type: string
      role:
        type: integer
    required:
    - contact
    - dateOfBirth
    - idProof
    - name
    - password
    type: object
  responses.UserResponse:
    properties:
      data:
        additionalProperties: true
        type: object
      message:
        type: string
      status:
        type: integer
    type: object
host: localhost:6001
info:
  contact:
    email: swiggyb1035@datascience.manipal.edu
    name: Jaithun Mahira
  description: Contains User APIs for Train Reservation System
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger User Service API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: This request will help users to login and generate token.
      parameters:
      - description: User Name and password
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UserResponse'
        "400":
          description: Bad Request
          schema:
            type: number
        "404":
          description: Not Found
          schema:
            type: number
        "500":
          description: Internal Server Error
          schema:
            type: number
      summary: User login
      tags:
      - User Service
  /signup:
    post:
      consumes:
      - application/json
      description: This request will create a new user in the system.
      parameters:
      - description: User details
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            type: number
        "500":
          description: Internal Server Error
          schema:
            type: number
      summary: To add new user in the train reservation system application
      tags:
      - User Service
  /users:
    get:
      consumes:
      - application/json
      description: Fetched all the users from the system(Admin Only)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: integer
      security:
      - Bearer Token: []
      summary: Get All Users
      tags:
      - User Service
  /users/{userId}:
    delete:
      consumes:
      - application/json
      description: Delete user.
      parameters:
      - description: User id
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: number
        "500":
          description: Internal Server Error
          schema:
            type: number
      security:
      - Bearer Token: []
      summary: Delete user by ID.
      tags:
      - User Service
    get:
      consumes:
      - application/json
      description: Get all the details of the user.
      parameters:
      - description: User Id
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            type: integer
      security:
      - Bearer Token: []
      summary: Get user details by ID.
      tags:
      - User Service
    put:
      consumes:
      - application/json
      description: Update details of User.
      parameters:
      - description: User id
        in: path
        name: userId
        required: true
        type: string
      - description: User details
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            type: number
        "500":
          description: Internal Server Error
          schema:
            type: number
      security:
      - Bearer Token: []
      summary: Update user by ID.
      tags:
      - User Service
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
