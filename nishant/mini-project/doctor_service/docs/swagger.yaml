basePath: /
definitions:
  api_entities.AppointmentRequest:
    description: Appointment Request
    properties:
      doctor:
        type: string
      from:
        example: 02 Jan 22 15:00 IST
        type: string
      to:
        example: 02 Jan 22 16:00 IST
        type: string
      userId:
        description: Patient User
        type: string
    type: object
  controller.DoctorRequest:
    description: Doctor Request
    properties:
      name:
        type: string
      qualification:
        type: string
    type: object
  controller.UserAppResponse:
    properties:
      doctor:
        type: string
      from:
        example: 02 Jan 22 15:00 IST
        type: string
      to:
        example: 02 Jan 22 16:00 IST
        type: string
    type: object
  models.Appointment:
    description: Appointment
    properties:
      from:
        type: integer
      patient:
        type: string
      to:
        type: integer
    required:
    - from
    - patient
    type: object
  models.Doctor:
    description: Doctor
    properties:
      _id:
        type: string
      appointments:
        items:
          $ref: '#/definitions/models.Appointment'
        type: array
      name:
        type: string
      qualification:
        type: string
      updated_on:
        type: integer
    required:
    - name
    - qualification
    type: object
host: localhost:7451
info:
  contact: {}
  description: This is doctor crud service.
  title: Doctor Service
  version: "1.0"
paths:
  /appointment:
    post:
      consumes:
      - application/json
      description: create Appointment
      parameters:
      - description: appointment info
        in: body
        name: appointment
        required: true
        schema:
          $ref: '#/definitions/api_entities.AppointmentRequest'
      responses:
        "200":
          description: ""
        "500":
          description: ""
      summary: create Appointment
      tags:
      - Appointment
  /appointment/user/{userid}:
    get:
      consumes:
      - application/json
      description: Get Appointment By  User
      parameters:
      - description: userid
        in: path
        name: userid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controller.UserAppResponse'
            type: array
        "400":
          description: ""
        "500":
          description: ""
      summary: Get Appointment By User
      tags:
      - Appointment
  /doctor:
    get:
      consumes:
      - application/json
      description: fetch all doctor
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Doctor'
            type: array
        "500":
          description: ""
      summary: fetch all  doctor
      tags:
      - Doctor
    post:
      consumes:
      - application/json
      description: create doctor
      parameters:
      - description: doctor info
        in: body
        name: doctor
        required: true
        schema:
          $ref: '#/definitions/controller.DoctorRequest'
      responses:
        "200":
          description: ""
        "500":
          description: ""
      summary: create doctor
      tags:
      - Doctor
  /doctor/{_id}:
    patch:
      consumes:
      - application/json
      description: Update doctor
      parameters:
      - description: id
        in: path
        name: _id
        required: true
        type: string
      - description: doctor info
        in: body
        name: doctor
        required: true
        schema:
          $ref: '#/definitions/controller.DoctorRequest'
      responses:
        "200":
          description: ""
        "500":
          description: ""
      summary: Update doctor
      tags:
      - Doctor
  /user/{_id}:
    delete:
      parameters:
      - description: id
        in: path
        name: _id
        required: true
        type: string
      responses:
        "200":
          description: ""
        "500":
          description: ""
      summary: Delete doctor by id
      tags:
      - Doctor
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
swagger: "2.0"
