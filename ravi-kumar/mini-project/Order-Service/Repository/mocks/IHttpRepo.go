// Code generated by mockery v2.10.2. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// IHttpRepo is an autogenerated mock type for the IHttpRepo type
type IHttpRepo struct {
	mock.Mock
}

// IsValidUser provides a mock function with given fields: userId
func (_m *IHttpRepo) IsValidUser(userId string) bool {
	ret := _m.Called(userId)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(userId)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// UpdateProductQuantity provides a mock function with given fields: userId, productIds, quantity
func (_m *IHttpRepo) UpdateProductQuantity(userId string, productIds []string, quantity int) (bool, *http.Response, *int) {
	ret := _m.Called(userId, productIds, quantity)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string, []string, int) bool); ok {
		r0 = rf(userId, productIds, quantity)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 *http.Response
	if rf, ok := ret.Get(1).(func(string, []string, int) *http.Response); ok {
		r1 = rf(userId, productIds, quantity)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	var r2 *int
	if rf, ok := ret.Get(2).(func(string, []string, int) *int); ok {
		r2 = rf(userId, productIds, quantity)
	} else {
		if ret.Get(2) != nil {
			r2 = ret.Get(2).(*int)
		}
	}

	return r0, r1, r2
}
