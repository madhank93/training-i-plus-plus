// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/v1/signin": {
            "post": {
                "description": "It accepts user email and password from user and then, creates a JWT Token signed by private key and return the JWT token back to user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Signin the user to his/her account",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SigninUser"
                        }
                    }
                }
            }
        },
        "/auth/v1/signup": {
            "post": {
                "description": "It checks if the user email exists in database or not, if it exists then it doesn't create new user. Otherwise it creates new user in the database along with his/her details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Create a new user in the database",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.SigninUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "sd@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "India"
                },
                "email": {
                    "type": "string",
                    "example": "sd@gmail.com"
                },
                "firstname": {
                    "type": "string",
                    "example": "Sujata"
                },
                "lastname": {
                    "type": "string",
                    "example": "Dwivedi"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "role": {
                    "description": "Enum for user role type (BUYER or SELLER)",
                    "type": "string",
                    "example": "SELLER"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
