// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Taranjeet Singh",
            "email": "singhtaran1515@gmail.com"
        },
        "license": {
            "name": "Apache 2.0"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/tickets": {
            "post": {
                "description": "Book a Ticket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ticket"
                ],
                "summary": "Book a Ticket.",
                "parameters": [
                    {
                        "type": "string[]",
                        "description": "Passenger Name",
                        "name": "PassengerName",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Source",
                        "name": "Source",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Destination",
                        "name": "Destination",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Train Number",
                        "name": "TrainNumber",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "number"
                        }
                    }
                }
            },
        },
        "/ticket/cancel/{ticketId}": {
            "get": {
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "description": "Cancel a particular ticket.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ticket"
                ],
                "summary": "Cancel Ticket",
                "responses": {
                    "200": {
                        "description": "OK",
                    },
                    "500": {
                        "description": "Internal Server Error",
                    }
                }
            },
        }
    },
    "definitions": {
        "ticketModel.Ticket": {
            "type": "object",
            "required": [
                "category",
                "price",
                "seller",
                "title"
            ],
            "properties": {
                "TicketPnr": {
                    "type": "string"
                },
                "PassengerName": {
                    "type": "string[]"
                },
                "Source": {
                    "type": "string"
                },
                "Destination": {
                    "type": "string"
                },
                "Amount": {
                    "type": "integer"
                },
                "NumberOfSeats": {
                    "type": "integer"
                },
                "TrainNumber": {
                    "type": "integer"
                },
                "TicketStatus":{
                    "type":"string"
                }
            }
        }
    },
    
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8003",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Train Reservation System - Booking Service",
	Description:      "Booking Microservice",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
