// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Taranjeet Singh",
            "email": "singhtaran1515@gmail.com"
        },
        "license": {
            "name": "Apache 2.0"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/user/signup": {
            "post": {
                "description": "User signup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User signup.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Name",
                        "name": "UserName",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "Password",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "Email",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Role",
                        "name": "Role",
                        "required": true
                    },
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "number"
                        }
                    }
                }
            },
        },
        "/user/login": {
            "post": {
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "description": "Login user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Login User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Name",
                        "name": "UserName",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "Password",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                    },
                    "500": {
                        "description": "Internal Server Error",
                    }
                }
            },
        },

        "/user/{userId}":{
            "put": {
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "description": "Edit a particular Uset.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Edit a particular User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Name",
                        "name": "UserName",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "Password",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "Email",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Role",
                        "name": "Role",
                        "required": true
                    },
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                    },
                    "500": {
                        "description": "Internal Server Error",
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "description": "Delete a particular User.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete a particular User",
                "responses": {
                    "200": {
                        "description": "OK",
                    },
                    "500": {
                        "description": "Internal Server Error",
                    }
                }
            },
        },
        

        "/users/": {
            "get": {
                "security": [
                    {
                        "Bearer Token": []
                    }
                ],
                "description": "Get all user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                    },
                    "500": {
                        "description": "Internal Server Error",
                    }
                }
            },
        }

    },
    "definitions": {
        "userModel.User": {
            "type": "object",
            "required": [
                "category",
                "price",
                "seller",
                "title"
            ],
            "properties": {
                "UserName": {
                    "type": "string"
                },
                "Password": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "Role": {
                    "type": "string"
                },
            }
        }
    },
    
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Train Reservation System - User Service",
	Description:      "User Microservice",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
