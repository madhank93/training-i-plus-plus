basePath: /
definitions:
  controller.Temp:
    properties:
      email:
        type: string
      location:
        type: integer
      skill:
        type: string
      username:
        type: string
    type: object
  controller.TempUser:
    properties:
      email:
        type: string
      location:
        type: integer
      password:
        type: string
      phone:
        type: integer
      username:
        type: string
    type: object
  entity.Expert:
    properties:
      email:
        type: string
      id:
        type: string
      isavailable:
        type: boolean
      location:
        type: integer
      rating:
        type: number
      reviews:
        items:
          $ref: '#/definitions/entity.RatingStruct'
        type: array
      served:
        type: integer
      skill:
        type: string
      username:
        type: string
    type: object
  entity.RatingStruct:
    properties:
      rating:
        type: integer
      review:
        type: string
    type: object
  entity.User:
    properties:
      email:
        type: string
      id:
        type: string
      location:
        type: integer
      password:
        type: string
      phone:
        type: integer
      username:
        type: string
    type: object
  entity.UserExpert:
    properties:
      accepted:
        type: boolean
      acceptedAt:
        type: string
      cost:
        type: integer
      expertid:
        type: string
      orderedAt:
        type: string
      skill:
        type: string
      status:
        type: string
      userid:
        type: string
    type: object
  middleware.Credentials:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    name: API Support
    url: http://demo.com/support
  description: This is demo server.
  termsOfService: demo.com
  title: Swagger demo service API
  version: "1.0"
paths:
  /expert/acceptreq/{expertid}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: Expert Id
        in: path
        name: expertid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserExpert'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Accept the waiting request of an Expert
  /expert/addrating/{expertid}:
    post:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: Expet ID
        in: path
        name: expertid
        required: true
        type: string
      - description: Rating and Review
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/entity.RatingStruct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema:
            type: boolean
        "500":
          description: Internal Server Error
          schema:
            type: boolean
      security:
      - ApiKeyAuth: []
      summary: Add Rating
  /expert/complete/{cost}/{expertid}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: Expert Id
        in: path
        name: expertid
        required: true
        type: string
      - description: Cost
        in: path
        name: cost
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserExpert'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get all the Completed Requests based on expertid
  /expert/delete/{expertid}:
    delete:
      description: get string by ID
      parameters:
      - description: userid
        in: path
        name: expertid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema:
            type: boolean
        "500":
          description: Internal Server Error
          schema:
            type: boolean
      security:
      - ApiKeyAuth: []
      summary: Shows all the expert accounts
  /expert/done/{userid}/{expertid}:
    get:
      consumes:
      - application/json
      description: Expert completed the work
      parameters:
      - description: userid
        in: path
        name: userid
        required: true
        type: string
      - description: expertid
        in: path
        name: expertid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema:
            type: boolean
        "500":
          description: Internal Server Error
          schema:
            type: boolean
      security:
      - ApiKeyAuth: []
      summary: Update work status of Expert
  /expert/filter/{skill}/{rating}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: Skill
        in: path
        name: skill
        required: true
        type: string
      - description: rating
        in: path
        name: rating
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Expert'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Filters userd based on skill and rating
  /expert/get/{skill}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: Skill
        in: path
        name: skill
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Expert'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get Experts based on skills
  /expert/get/{skill}/{userid}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: Skill
        in: path
        name: skill
        required: true
        type: string
      - description: User ID
        in: path
        name: userid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Expert'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Books an Employee based on skill
  /expert/getallexperts:
    get:
      description: get string by ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Expert'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Shows all the expert accounts
  /expert/getexpert/{expertid}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: expertid
        in: path
        name: expertid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Expert'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get Expert by Id
  /expert/rejectreq/{expertid}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: Expert Id
        in: path
        name: expertid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema:
            type: boolean
        "500":
          description: Internal Server Error
          schema:
            type: boolean
      security:
      - ApiKeyAuth: []
      summary: Reject the waiting request of an expert
  /expert/signupexpert:
    post:
      description: get string by ID
      parameters:
      - description: Expert Details
        in: body
        name: expert
        required: true
        schema:
          $ref: '#/definitions/controller.Temp'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Expert'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Sign Up
  /expert/waitingreq/{expertid}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: Expertid
        in: path
        name: expertid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Expert'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get the waiting requests of an expert
  /user/loginuser:
    post:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/middleware.Credentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Login Authentication
  /user/signuser:
    post:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: New User Details
        in: body
        name: newuser
        required: true
        schema:
          $ref: '#/definitions/controller.TempUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.User'
      summary: Sign Up User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
swagger: "2.0"
